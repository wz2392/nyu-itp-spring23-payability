#Updated join to handle null values of the category
SELECT SELLER_ID ,DATE_OF_PURCHASE, AMAZON_ORDER_ID, SALES.ASIN, 
IFNULL(PRODUCTS.PRODUCT_GROUP, 'Unknown') AS PRODUCT_GROUP,
IFNULL(PRODUCTS.PRODUCT_TYPE_NAME, 'Unknown') AS PRODUCT_TYPE_NAME,
SALES_FULFILLMENT_CHANNEL, ORDER_STATUS, SALES, ORDERED_UNITS,   
FROM (SELECT SELLER_ID ,DATE_OF_PURCHASE, AMAZON_ORDER_ID, ASIN,  SALES_FULFILLMENT_CHANNEL, ORDER_STATUS, SALES, ORDERED_UNITS,
FROM
(SELECT MP_SUP_KEY AS SELLER_ID ,purchase_day AS DATE_OF_PURCHASE, amazon_order_id AS AMAZON_ORDER_ID, fulfillment_channel as SALES_FULFILLMENT_CHANNEL, ORDER_STATUS, ASIN,
SUM(ITEM_PRICE * QUANTITY) OVER (PARTITION BY PURCHASE_DAY, MP_SUP_KEY, amazon_order_id, partition_date ) AS SALES,
SUM(QUANTITY) OVER (PARTITION BY PURCHASE_DAY, MP_SUP_KEY , amazon_order_id, partition_date ) AS ORDERED_UNITS,
ROW_NUMBER() OVER (PARTITION BY PURCHASE_DAY, MP_SUP_KEY, amazon_order_id) as rn
FROM `bigqueryexport-183608.amazon.customer_order_metrics`
WHERE EXTRACT(YEAR FROM purchase_date) IN (2022,2023) AND ORDER_STATUS NOT IN ('Pending', 'Cancelled'))
WHERE rn=1
) SALES
LEFT JOIN 
(SELECT ID_TYPE, ID AS ASIN, PRODUCT_GROUP, PRODUCT_TYPE_NAME FROM `bigqueryexport-183608.amazon.products`
WHERE id_type='ASIN') PRODUCTS 
ON SALES.ASIN = PRODUCTS.ASIN;


## updated SALES DATA THAT WE HAVE USED IN THE DASHBOARD
SELECT mp_sup_key ,DATE_OF_PURCHASE, AMAZON_ORDER_ID,  SALES_FULFILLMENT_CHANNEL, ORDER_STATUS, SALES, ORDERED_UNITS, 
FROM
(SELECT MP_SUP_KEY AS mp_sup_key ,purchase_day AS DATE_OF_PURCHASE, amazon_order_id AS AMAZON_ORDER_ID, fulfillment_channel as SALES_FULFILLMENT_CHANNEL, ORDER_STATUS,
SUM(ITEM_PRICE * QUANTITY) OVER (PARTITION BY PURCHASE_DAY, MP_SUP_KEY, amazon_order_id, partition_date ) AS SALES,
SUM(QUANTITY) OVER (PARTITION BY PURCHASE_DAY, MP_SUP_KEY , amazon_order_id, partition_date ) AS ORDERED_UNITS,
ROW_NUMBER() OVER (PARTITION BY PURCHASE_DAY, MP_SUP_KEY, amazon_order_id) as rn
FROM `bigqueryexport-183608.amazon.customer_order_metrics`
WHERE EXTRACT(YEAR FROM purchase_date) IN (2022,2023) AND ORDER_STATUS NOT IN ('Pending', 'Cancelled'))
WHERE rn=1;

#updated refunds
SELECT mp_sup_key, POSTED_DATE, AMAZON_ORDER_ID,  CHARGED_AMOUNT, NUMBER_OF_REFUNDS
FROM
(SELECT MP_SUP_KEY AS mp_sup_key, DATE(posted_date) as POSTED_DATE, amazon_order_id AS AMAZON_ORDER_ID, 
SUM(ITEM_CHARGE_AMOUNT) OVER (PARTITION BY MP_SUP_KEY, DATE(posted_date)) AS CHARGED_AMOUNT,
MAX(quantity) OVER (PARTITION BY MP_SUP_KEY, DATE(posted_date), AMAZON_ORDER_ID ) AS NUMBER_OF_REFUNDS,
ROW_NUMBER() OVER (PARTITION BY MP_SUP_KEY, DATE(posted_date), AMAZON_ORDER_ID) as rn
FROM `bigqueryexport-183608.amazon.vbq_refundevent_historical` 
WHERE EXTRACT(YEAR FROM posted_date) IN (2022, 2023))
where rn=1 ;